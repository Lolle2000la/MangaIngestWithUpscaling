name: Build and Publish Docker Image

on:
  release:
    types: [published]

jobs:
  build-and-push-x86:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: manga-ingest-with-upscaling
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        with:
          submodules: 'true'

      - name: Set owner to lowercase
        run: echo "OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Cuda Docker image (AMD64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-amd64,${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest-amd64
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  build-and-push-rocm-x86:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: manga-ingest-with-upscaling
      REGISTRY: ghcr.io
      OWNER: lolle2000la
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        with:
          submodules: 'true'

      - name: Set owner to lowercase
        run: echo "OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ROCm Docker image (AMD64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: rocm.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-rocm,${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest-rocm
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          platforms: linux/amd64

  build-and-push-arm64:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-24.04-arm
    env:
      IMAGE_NAME: manga-ingest-with-upscaling
      REGISTRY: ghcr.io
      OWNER: lolle2000la
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
        with:
          submodules: 'true'

      - name: Set owner to lowercase
        run: echo "OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Cuda Docker image (ARM64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-arm64,${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest-arm64
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      # Un-comment if you also want a ROCm ARM64 image:
      # - name: Build and push ROCm Docker image (ARM64)
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: rocm.Dockerfile
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}-rocm-arm64,${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest-rocm-arm64
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     platforms: linux/arm64

  create-manifest:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest
    needs: [build-and-push-x86, build-and-push-arm64]
    env:
      IMAGE_NAME: manga-ingest-with-upscaling
      REGISTRY: ghcr.io
      OWNER: lolle2000la
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest for main image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}"
          docker buildx imagetools create -t "$IMAGE:${{ env.TAG }}" -t "$IMAGE:latest" \
            "$IMAGE:${{ env.TAG }}-amd64" \
            "$IMAGE:${{ env.TAG }}-arm64"
          docker push "$IMAGE:${{ env.TAG }}"
