# .github/workflows/docker-build.yml
name: Build and Push Cuda Base Images

on:
  schedule:
    - cron: '0 4 15 * *' # Make sure we get the latest base image every month
  workflow_dispatch: 
  push:
    paths:
      - cudaBase.Dockerfile
      - cudaBase128.Dockerfile
    tags-ignore:
      - '**'

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.settag.outputs.tag }}
    steps:
      - name: Generate timestamp tag
        id: settag
        run: |
          # Format: YYYYMMDDHHMMSS in UTC
          TAG=$(date -u +"%Y%m%d%H%M%S")
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated tag: $TAG"

  build-amd64:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest
    needs: generate-tag
    strategy:
      matrix:
        cuda-version: [
          {
            "name": "11.8",
            "dockerfile": "cudaBase.Dockerfile", 
            "tag-suffix": "cuda"
          },
          {
            "name": "12.8",
            "dockerfile": "cudaBase128.Dockerfile",
            "tag-suffix": "cuda-12.8"
          }
        ]
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 35000
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.cuda-version.dockerfile }}
          platforms: linux/amd64
          provenance: false
          push: true
          tags: |
            ghcr.io/lolle2000la/manga-ingest-with-upscaling-base:${{ needs.generate-tag.outputs.tag }}-${{ matrix.cuda-version.tag-suffix }}-amd64

  manifest:
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest
    needs: [build-amd64, generate-tag]
    strategy:
      matrix:
        cuda-version: [
          {
            "name": "11.8",
            "tag-suffix": "cuda"
          },
          {
            "name": "12.8", 
            "tag-suffix": "cuda-12.8"
          }
        ]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          TAG=${{ needs.generate-tag.outputs.tag }}
          IMAGE=ghcr.io/lolle2000la/manga-ingest-with-upscaling-base
          SUFFIX=${{ matrix.cuda-version.tag-suffix }}

          echo "Creating manifest for tag: ${TAG}-${SUFFIX}"
          docker manifest create "$IMAGE:${TAG}-${SUFFIX}" \
            --amend "$IMAGE:${TAG}-${SUFFIX}-amd64"
          docker manifest push "$IMAGE:${TAG}-${SUFFIX}"

          echo "Creating manifest for latest tag"
          docker manifest create "$IMAGE:latest-${SUFFIX}" \
            --amend "$IMAGE:${TAG}-${SUFFIX}-amd64"
          docker manifest push "$IMAGE:latest-${SUFFIX}"
