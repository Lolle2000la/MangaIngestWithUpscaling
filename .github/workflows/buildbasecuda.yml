# .github/workflows/docker-build.yml
name: Build and Push Cuda Base Image

on:
  workflow_dispatch: 
  push:
    paths:
      - rocmCuda.Dockerfile

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.settag.outputs.tag }}
    steps:
      - name: Generate timestamp tag
        id: settag
        run: |
          # Format: YYYYMMDDHHMMSS in UTC
          TAG=$(date -u +"%Y%m%d%H%M%S")
          echo "::set-output name=tag::$TAG"
          echo "Generated tag: $TAG"

  build-amd64:
    permissions: 
        contents: read
        packages: write 
    runs-on: ubuntu-latest
    needs: generate-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cudaBase.Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/lolle2000la/manga-ingest-with-upscaling-base:${{ needs.generate-tag.outputs.tag }}-cuda-amd64

  build-arm64:
    permissions: 
        contents: read
        packages: write 
    runs-on: ubuntu-24.04-arm
    needs: generate-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cudaBase.Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/lolle2000la/manga-ingest-with-upscaling-base:${{ needs.generate-tag.outputs.tag }}-cuda-arm64

  manifest:
    permissions: 
        contents: read
        packages: write 
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          TAG=${{ needs.generate-tag.outputs.tag }}
          IMAGE=ghcr.io/lolle2000la/manga-ingest-with-upscaling-base

          echo "Creating manifest for tag: $TAG"
          docker manifest create "$IMAGE:$TAG-cuda" \
            --amend "$IMAGE:$TAG-cuda-amd64" \
            --amend "$IMAGE:$TAG-cuda-arm64"
          docker manifest push "$IMAGE:$TAG-cuda"

          echo "Creating manifest for latest tag"
          docker manifest create "$IMAGE:latest-cuda" \
            --amend "$IMAGE:$TAG-cuda-amd64" \
            --amend "$IMAGE:$TAG-cuda-arm64"
          docker manifest push "$IMAGE:latest-cuda"
