name: Velopack Release

on:
  release:
    types: [published]

permissions:
  contents: write # needed to write releases

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write # needed to write releases
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install Velopack
        run: dotnet tool install -g vpk

      - name: Add .dotnet/tools to PATH
        shell: pwsh
        run: echo "$HOME\.dotnet\tools" >> $env:GITHUB_PATH

      - name: Package with Velopack
        run: |
          $version = "${{ github.event.release.tag_name }}".TrimStart("v")
          dotnet publish MangaIngestWithUpscaling.RemoteWorker/MangaIngestWithUpscaling.RemoteWorker.csproj -c Release --self-contained -r win-x64 -p:Version=$VERSION -p:VelopackRelease=true -o ./publish
          vpk pack --packId MangaIngestWithUpscaling.RemoteWorker --packVersion $VERSION --packDir ./publish --icon ./MangaIngestWithUpscaling/wwwroot/favicon.png --mainExe MangaIngestWithUpscaling.RemoteWorker.exe

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: windows-release
      #     path: artifacts

      - name: Upload to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          vpk upload github --tag ${{ github.event.release.tag_name }} --token ${{ secrets.GITHUB_TOKEN }} --merge --repoUrl https://github.com/${{ github.repository }}

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install Velopack
        run: dotnet tool install -g vpk

      - name: Add .dotnet/tools to PATH
        run: echo "/root/.dotnet/tools" >> $GITHUB_PATH

      - name: Package with Velopack
        run: |
          apt update && apt install -y squashfs-tools  
          VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')
          dotnet publish MangaIngestWithUpscaling.RemoteWorker/MangaIngestWithUpscaling.RemoteWorker.csproj -c Release --self-contained -r linux-x64 -p:Version=$VERSION -p:VelopackRelease=true -o ./publish
          vpk pack --packId MangaIngestWithUpscaling.RemoteWorker --packVersion $VERSION --packDir ./publish  --icon ./MangaIngestWithUpscaling/wwwroot/favicon.png --mainExe MangaIngestWithUpscaling.RemoteWorker

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: linux-release
      #     path: artifacts

      - name: Upload to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          vpk upload github --tag ${{ github.event.release.tag_name }} --token ${{ secrets.GITHUB_TOKEN }} --merge --repoUrl https://github.com/${{ github.repository }}

  # upload-release-assets:
  #   runs-on: ubuntu-latest
  #   needs: [build-windows, build-linux]
  #   permissions:
  #     contents: write # needed to write releases
  #   steps:
  #     - name: Download windows artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: windows-release
  #         path: release/win

  #     - name: Download linux artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: linux-release
  #         path: release/linux

  #     - name: Install Velopack
  #       run: dotnet tool install -g vpk

  #     - name: Add .dotnet/tools to PATH
  #       run: echo "/root/.dotnet/tools" >> $GITHUB_PATH

  #     - name: Upload to Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         vpk upload github --repoUrl https://github.com/${{ github.repository }} --releaseDir release/win
  #         vpk upload github --repoUrl https://github.com/${{ github.repository }} --releaseDir release/linux
