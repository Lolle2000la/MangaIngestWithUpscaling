@page "/upscaling/profiles"
@using MangaIngestWithUpscaling.Helpers
@using MangaIngestWithUpscaling.Shared.Data.LibraryManagement

@inject ApplicationDbContext DbContext
@inject IDialogService DialogService

<PageTitle>Upscaler Profiles</PageTitle>

<MudText Typo="Typo.h4">Create and Edit Profiles configuring Upscaling</MudText>

<MudPaper Elevation="3" Class="mb-3">
    <MudStack Row>
        <a href="upscaling/profiles/create">
            <MudButton StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary">Create</MudButton>
        </a>
    </MudStack>
</MudPaper>

<MudTable T="UpscalerProfile" Items="@Profiles">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Scaling Factor</MudTh>
        <MudTh>Comp. Format</MudTh>
        <MudTh>Comp. Quality</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.ScalingFactor.GetDisplayName()</MudTd>
        <MudTd>@context.CompressionFormat.GetDisplayName()</MudTd>
        <MudTd>@context.Quality</MudTd>
        <MudTd>
            <a href="upscaling/profiles/edit/@context.Id">
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Text"
                               Size="Size.Small"
                               title="Edit this profile"/>
            </a>
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Text" Color="Color.Error"
                           Size="Size.Small"
                           title="Delete this profile"
                           OnClick="e => OnDeleteProfile(context)"/>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    private IReadOnlyCollection<UpscalerProfile> Profiles { get; set; } = new List<UpscalerProfile>();

    protected override async Task OnInitializedAsync()
    {
        Profiles = await DbContext.UpscalerProfiles.ToListAsync();
    }

    private async Task OnDeleteProfile(UpscalerProfile profile)
    {
        var result = await DialogService.ShowMessageBox(
            "Delete Profile",
            "Do you really want to delete this profile? Note: This does NOT delete any of the files created.",
            "OK", cancelText: "Cancel",
            options: new DialogOptions
                {
                    CloseButton = true,
                    BackdropClick = true,
                    CloseOnEscapeKey = true
                });

        if (result.HasValue && result.Value)
        {
            profile.Deleted = true;
            await DbContext.SaveChangesAsync();
        }

        Profiles = await DbContext.UpscalerProfiles.ToListAsync();
    }
}
