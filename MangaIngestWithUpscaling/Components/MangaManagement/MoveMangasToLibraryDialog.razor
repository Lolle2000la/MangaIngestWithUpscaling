@using MangaIngestWithUpscaling.Data.LibraryManagement
@using MangaIngestWithUpscaling.Shared.Data.LibraryManagement
@using MangaIngestWithUpscaling.Services.MangaManagement
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject IMangaLibraryMover MangaMover

<MudDialog>
    <DialogContent>
        <MudStack>
            <MudText>
                Move @(Mangas.Count > 1 ? $"{Mangas.Count} Mangas" : '"' + Mangas.First().PrimaryTitle + '"')?
            </MudText>
            <MudText Color="Color.Error">
                This will also move <b>ALL</b> files associated with the Manga.
            </MudText>
            <MudSelect Label="The libary to move the Manga into." T="Library" @bind-Value="selected">
                @foreach (var library in libraries)
                {
                    <MudSelectItem T="Library" Value="@library">@library.Name</MudSelectItem>
                }
            </MudSelect>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.MergeType"
                   Color="Color.Primary"
                   Variant="Variant.Filled"
                   Disabled="selected == null"
                   OnClick="Submit">Move</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public required List<Manga> Mangas { get; set; }

    private Library? selected;
    private List<Library> libraries = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        libraries = await context.Libraries.ToListAsync();
    }

    async Task Submit()
    {
        if (selected == null)
        {
            return;
        }

        foreach (var manga in Mangas)
        {
            await MangaMover.MoveMangaAsync(manga, selected);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}
