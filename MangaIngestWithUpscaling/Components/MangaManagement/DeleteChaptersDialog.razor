@using MangaIngestWithUpscaling.Data.LibraryManagement
@using MangaIngestWithUpscaling.Services.ChapterManagement
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject IChapterDeletion DeletionService

<MudDialog>
    <DialogContent>
        <MudStack>
            <MudText>Delete @Chapters.Count Chapters?</MudText>

            <MudCheckBox T="bool" Label="Delete original files from disk" @bind-Value="DeleteOriginalFiles" />
            <MudCheckBox T="bool" Label="Delete upscaled files from disk" @bind-Value="DeleteUpscaledFiles" />
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.DeleteForever"
                   Color="Color.Error"
                   Variant="Variant.Filled"
                   OnClick="Submit">Delete</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public required IReadOnlyCollection<Chapter> Chapters { get; set; }

    private bool DeleteOriginalFiles { get; set; }
    private bool DeleteUpscaledFiles { get; set; }

    private async Task Submit()
    {
        using var context = DbContextFactory.CreateDbContext();
        
        foreach (var chapter in Chapters)
        {
            DeletionService.DeleteChapter(context, chapter, DeleteOriginalFiles, DeleteUpscaledFiles);
        }

        await context.SaveChangesAsync();

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}
