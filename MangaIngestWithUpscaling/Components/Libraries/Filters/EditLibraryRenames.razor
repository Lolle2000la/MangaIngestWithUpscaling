@using MangaIngestWithUpscaling.Data.LibraryManagement
@using MangaIngestWithUpscaling.Helpers
<MudStack>
    <MudText Typo="Typo.h5">Edit Rename Rules</MudText>
    <MudText Typo="Typo.body1">
        Define regex or substring replacements to apply during ingest.
    </MudText>

    <MudTable T="LibraryRenameRule" Items="@Library.RenameRules" Dense>
        <HeaderContent>
            <MudTh>Pattern</MudTh>
            <MudTh>Pattern Type</MudTh>
            <MudTh>Target Field</MudTh>
            <MudTh>Replacement</MudTh>
            <MudTh><MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="async () => { Library.RenameRules.Add(new()); await RulesChanged.InvokeAsync(); }" /></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Pattern">@context.Pattern</MudTd>
            <MudTd DataLabel="Pattern Type">@context.PatternType.GetDisplayName()</MudTd>
            <MudTd DataLabel="Target Field">@context.TargetField.GetDisplayName()</MudTd>
            <MudTd DataLabel="Replacement">@context.Replacement</MudTd>
            <MudTd>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                               OnClick="async () => { Library.RenameRules.Remove(context); await RulesChanged.InvokeAsync(); }" />
            </MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <EditLibraryRenameForm RenameRule="@context" RulesChanged="RulesChanged" />
        </RowEditingTemplate>
    </MudTable>
</MudStack>

@code {
    [Parameter] public Library Library { get; set; }
    [Parameter] public EventCallback RulesChanged { get; set; }
}
