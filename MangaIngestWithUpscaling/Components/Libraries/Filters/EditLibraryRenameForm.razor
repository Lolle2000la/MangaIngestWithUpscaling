@using MangaIngestWithUpscaling.Data.LibraryManagement

<MudTd DataLabel="Pattern">
    <MudTextField Immediate="true" Required="true"
                  Value="@RenameRule.Pattern"
                  ValueChanged="@((string val) => { RenameRule.Pattern = val; RulesChanged.InvokeAsync(); })" />
</MudTd>
<MudTd DataLabel="Pattern Type">
    <MudSelect Immediate="true" T="LibraryRenamePatternType"
               Value="@RenameRule.PatternType"
               ValueChanged="@((LibraryRenamePatternType val) => { RenameRule.PatternType = val; RulesChanged.InvokeAsync(); })">
        <MudSelectItem Value="LibraryRenamePatternType.Contains">Target contains pattern</MudSelectItem>
        <MudSelectItem Value="LibraryRenamePatternType.Regex">Regular Expression</MudSelectItem>
    </MudSelect>
</MudTd>
<MudTd DataLabel="Target Field">
    <MudSelect Immediate="true" T="LibraryRenameTargetField"
               Value="@RenameRule.TargetField"
               ValueChanged="@((LibraryRenameTargetField val) => { RenameRule.TargetField = val; RulesChanged.InvokeAsync(); })">
        <MudSelectItem Value="LibraryRenameTargetField.SeriesTitle">Series Title</MudSelectItem>
        <MudSelectItem Value="LibraryRenameTargetField.FileName">File Name</MudSelectItem>
        <MudSelectItem Value="LibraryRenameTargetField.ChapterTitle">Chapter Title</MudSelectItem>
    </MudSelect>
</MudTd>
<MudTd DataLabel="Replacement">
    <MudTextField Immediate="true"
                  Value="@RenameRule.Replacement"
                  ValueChanged="@((string val) => { RenameRule.Replacement = val; RulesChanged.InvokeAsync(); })" />
</MudTd>

@code {
    [Parameter, EditorRequired] public required LibraryRenameRule RenameRule { get; set; }
    [Parameter] public EventCallback RulesChanged { get; set; }
}
