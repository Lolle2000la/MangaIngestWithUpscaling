@using MangaIngestWithUpscaling.Data.LibraryManagement

<MudDialog>
    <TitleContent>Image Preview</TitleContent>
    <DialogContent>
        <MudStack Spacing="3" AlignItems="AlignItems.Center">
            @if (!string.IsNullOrEmpty(FilteredImage.ThumbnailBase64))
            {
                <MudImage Src="@($"data:{FilteredImage.MimeType};base64,{FilteredImage.ThumbnailBase64}")" 
                          Class="rounded" 
                          Style="max-width: 100%; max-height: 500px;" />
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Filled.Image" Size="Size.Large" />
            }
            
            <MudStack AlignItems="AlignItems.Center" Spacing="1">
                <MudText Typo="Typo.h6">@FilteredImage.OriginalFileName</MudText>
                
                @if (!string.IsNullOrEmpty(FilteredImage.Description))
                {
                    <MudText Typo="Typo.body1" Align="Align.Center">@FilteredImage.Description</MudText>
                }
                
                <MudStack Row="true" Spacing="4" AlignItems="AlignItems.Center" Justify="Justify.Center">
                    @if (FilteredImage.FileSizeBytes.HasValue)
                    {
                        <MudText Typo="Typo.caption" Color="Color.Secondary">
                            Size: @FormatFileSize(FilteredImage.FileSizeBytes.Value)
                        </MudText>
                    }
                    
                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                        Added: @FilteredImage.DateAdded.ToString("yyyy-MM-dd")
                    </MudText>
                    
                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                        Occurrences: @FilteredImage.OccurrenceCount
                    </MudText>
                </MudStack>
            </MudStack>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IDialogReference? DialogReference { get; set; }
    [Parameter] public FilteredImage FilteredImage { get; set; } = null!;

    private void Close() => DialogReference?.Close();
    
    private static string FormatFileSize(long bytes)
    {
        string[] suffixes = ["B", "KB", "MB", "GB"];
        int counter = 0;
        decimal number = bytes;
        while (Math.Round(number / 1024) >= 1)
        {
            number /= 1024;
            counter++;
        }
        return $"{number:n1} {suffixes[counter]}";
    }
}
